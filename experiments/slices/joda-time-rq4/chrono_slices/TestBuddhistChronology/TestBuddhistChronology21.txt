 0.0% done, time left: unknown                                0.1% done, time left: unknown  0.7% done, time left: unknown  0.8% done, time left: unknown  1.1% done, time left: unknown  1.2% done, time left: unknown  1.3% done, time left:   0:02:56    1.7% done, time left:   0:01:50  3.2% done, time left:   0:01:18  4.8% done, time left:   0:01:02  6.5% done, time left:   0:00:52  8.0% done, time left:   0:00:46  9.2% done, time left:   0:00:41 10.4% done, time left:   0:00:37 10.5% done, time left:   0:00:33 11.3% done, time left:   0:00:30 13.2% done, time left:   0:00:28 14.9% done, time left:   0:00:25 17.1% done, time left:   0:00:21 18.6% done, time left:   0:00:18 21.2% done, time left:   0:00:15 24.5% done, time left:   0:00:11 27.3% done, time left:   0:00:08 27.3% done, time left:   0:00:05 29.5% done, time left:   0:00:04 30.3% done, time left:   0:00:03 32.4% done, time left:   0:00:03 34.9% done, time left:   0:00:03 37.2% done, time left:   0:00:03 38.9% done, time left:   0:00:03 40.9% done, time left:   0:00:03 44.2% done, time left:   0:00:02 48.0% done, time left:   0:00:02 51.5% done, time left:   0:00:01 55.5% done, time left:   0:00:01 59.1% done, time left:   0:00:00 63.0% done, time left:   0:00:00 66.7% done, time left:   0:00:00 70.7% done, time left:   0:00:00 74.4% done, time left:   0:00:00 78.3% done, time left:   0:00:00 82.1% done, time left:   0:00:00 86.0% done, time left:   0:00:00 89.8% done, time left:   0:00:00 92.3% done, time left:   0:00:00 95.8% done, time left:   0:00:00 98.8% done, time left:   0:00:00 99.7% done, time left:   0:00:00 100.0% done, time left:   0:00:00  finished
The dynamic slice for criterion [org.joda.time.chrono.TestBuddhistChronology.testWithZone:212:*]:
org.joda.time.DateTimeZone.getDefault:163 GETSTATIC org/joda/time/DateTimeZone.cDefault Ljava/util/concurrent/atomic/AtomicReference;
org.joda.time.DateTimeZone.getDefault:163 INVOKEVIRTUAL java/util/concurrent/atomic/AtomicReference.get()Ljava/lang/Object;
org.joda.time.DateTimeZone.getDefault:163 ASTORE 0
org.joda.time.DateTimeZone.getDefault:187 ALOAD 0
org.joda.time.DateTimeZone.getDefault:187 ARETURN
org.joda.time.DateTimeZone.setDefault:207 GETSTATIC org/joda/time/DateTimeZone.cDefault Ljava/util/concurrent/atomic/AtomicReference;
org.joda.time.DateTimeZone.setDefault:207 ALOAD 0
org.joda.time.DateTimeZone.setDefault:207 INVOKEVIRTUAL java/util/concurrent/atomic/AtomicReference.set(Ljava/lang/Object;)V
org.joda.time.chrono.AssembledChronology.<init>:100 ALOAD 0
org.joda.time.chrono.AssembledChronology.<init>:100 ALOAD 1
org.joda.time.chrono.AssembledChronology.<init>:100 PUTFIELD org/joda/time/chrono/AssembledChronology.iBase Lorg/joda/time/Chronology;
org.joda.time.chrono.AssembledChronology.getZone:107 ALOAD 0
org.joda.time.chrono.AssembledChronology.getZone:107 GETFIELD org/joda/time/chrono/AssembledChronology.iBase Lorg/joda/time/Chronology;
org.joda.time.chrono.AssembledChronology.getZone:107 DUP
org.joda.time.chrono.AssembledChronology.getZone:107 ASTORE 1
org.joda.time.chrono.AssembledChronology.getZone:107 IFNULL L0 false true
org.joda.time.chrono.AssembledChronology.getZone:108 ALOAD 1
org.joda.time.chrono.AssembledChronology.getZone:108 ARETURN
org.joda.time.chrono.BuddhistChronology.getInstance:94 INVOKESTATIC org/joda/time/DateTimeZone.getDefault()Lorg/joda/time/DateTimeZone;
org.joda.time.chrono.BuddhistChronology.getInstance:94 INVOKESTATIC org/joda/time/chrono/BuddhistChronology.getInstance(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/BuddhistChronology;
org.joda.time.chrono.BuddhistChronology.getInstance:108 GETSTATIC org/joda/time/chrono/BuddhistChronology.cCache Ljava/util/concurrent/ConcurrentHashMap;
org.joda.time.chrono.BuddhistChronology.getInstance:108 ALOAD 0
org.joda.time.chrono.BuddhistChronology.getInstance:108 INVOKEVIRTUAL java/util/concurrent/ConcurrentHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;
org.joda.time.chrono.BuddhistChronology.getInstance:108 ASTORE 1
org.joda.time.chrono.BuddhistChronology.getInstance:109 ALOAD 1
org.joda.time.chrono.BuddhistChronology.getInstance:109 IFNONNULL L1 false true
org.joda.time.chrono.BuddhistChronology.getInstance:114 NEW org/joda/time/chrono/BuddhistChronology
org.joda.time.chrono.BuddhistChronology.getInstance:114 DUP
org.joda.time.chrono.BuddhistChronology.getInstance:114 INVOKESTATIC org/joda/time/chrono/LimitChronology.getInstance(Lorg/joda/time/Chronology;Lorg/joda/time/ReadableDateTime;Lorg/joda/time/ReadableDateTime;)Lorg/joda/time/chrono/LimitChronology;
org.joda.time.chrono.BuddhistChronology.getInstance:114 INVOKESPECIAL org/joda/time/chrono/BuddhistChronology.<init>(Lorg/joda/time/Chronology;Ljava/lang/Object;)V
org.joda.time.chrono.BuddhistChronology.getInstance:114 ASTORE 1
org.joda.time.chrono.BuddhistChronology.getInstance:115 GETSTATIC org/joda/time/chrono/BuddhistChronology.cCache Ljava/util/concurrent/ConcurrentHashMap;
org.joda.time.chrono.BuddhistChronology.getInstance:115 ALOAD 0
org.joda.time.chrono.BuddhistChronology.getInstance:115 ALOAD 1
org.joda.time.chrono.BuddhistChronology.getInstance:115 INVOKEVIRTUAL java/util/concurrent/ConcurrentHashMap.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
org.joda.time.chrono.BuddhistChronology.getInstance:120 ALOAD 1
org.joda.time.chrono.BuddhistChronology.getInstance:120 ARETURN
org.joda.time.chrono.BuddhistChronology.<init>:132 ALOAD 0
org.joda.time.chrono.BuddhistChronology.<init>:132 ALOAD 1
org.joda.time.chrono.BuddhistChronology.<init>:132 INVOKESPECIAL org/joda/time/chrono/AssembledChronology.<init>(Lorg/joda/time/Chronology;Ljava/lang/Object;)V
org.joda.time.chrono.BuddhistChronology.withZone:161 ALOAD 1
org.joda.time.chrono.BuddhistChronology.withZone:161 IFNONNULL L0 false true
org.joda.time.chrono.BuddhistChronology.withZone:162 INVOKESTATIC org/joda/time/DateTimeZone.getDefault()Lorg/joda/time/DateTimeZone;
org.joda.time.chrono.BuddhistChronology.withZone:162 ASTORE 1
org.joda.time.chrono.BuddhistChronology.withZone:164 ALOAD 1
org.joda.time.chrono.BuddhistChronology.withZone:164 ALOAD 0
org.joda.time.chrono.BuddhistChronology.withZone:164 INVOKEVIRTUAL org/joda/time/chrono/BuddhistChronology.getZone()Lorg/joda/time/DateTimeZone;
org.joda.time.chrono.BuddhistChronology.withZone:164 IF_ACMPNE L1 true false
org.joda.time.chrono.BuddhistChronology.withZone:167 ALOAD 1
org.joda.time.chrono.BuddhistChronology.withZone:167 INVOKESTATIC org/joda/time/chrono/BuddhistChronology.getInstance(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/BuddhistChronology;
org.joda.time.chrono.BuddhistChronology.withZone:167 ARETURN
org.joda.time.chrono.LimitChronology.getInstance:79 NEW org/joda/time/chrono/LimitChronology
org.joda.time.chrono.LimitChronology.getInstance:79 ARETURN
org.joda.time.chrono.TestBuddhistChronology.main:78 INVOKEVIRTUAL org/joda/time/chrono/TestBuddhistChronology.setUp()V
org.joda.time.chrono.TestBuddhistChronology.main:79 INVOKEVIRTUAL org/joda/time/chrono/TestBuddhistChronology.testFactory()V
org.joda.time.chrono.TestBuddhistChronology.main:83 INVOKEVIRTUAL org/joda/time/chrono/TestBuddhistChronology.testFactory_Zone()V
org.joda.time.chrono.TestBuddhistChronology.main:126 INVOKEVIRTUAL org/joda/time/chrono/TestBuddhistChronology.setUp()V
org.joda.time.chrono.TestBuddhistChronology.main:127 INVOKEVIRTUAL org/joda/time/chrono/TestBuddhistChronology.testWithZone()V
org.joda.time.chrono.TestBuddhistChronology.setUp:145 GETSTATIC org/joda/time/chrono/TestBuddhistChronology.LONDON Lorg/joda/time/DateTimeZone;
org.joda.time.chrono.TestBuddhistChronology.setUp:145 INVOKESTATIC org/joda/time/DateTimeZone.setDefault(Lorg/joda/time/DateTimeZone;)V
org.joda.time.chrono.TestBuddhistChronology.testFactory:173 INVOKESTATIC org/joda/time/chrono/BuddhistChronology.getInstance()Lorg/joda/time/chrono/BuddhistChronology;
org.joda.time.chrono.TestBuddhistChronology.testFactory_Zone:180 GETSTATIC org/joda/time/chrono/TestBuddhistChronology.TOKYO Lorg/joda/time/DateTimeZone;
org.joda.time.chrono.TestBuddhistChronology.testFactory_Zone:180 INVOKESTATIC org/joda/time/chrono/BuddhistChronology.getInstance(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/BuddhistChronology;
org.joda.time.chrono.TestBuddhistChronology.testWithZone:212 GETSTATIC org/joda/time/chrono/TestBuddhistChronology.LONDON Lorg/joda/time/DateTimeZone;
org.joda.time.chrono.TestBuddhistChronology.testWithZone:212 INVOKESTATIC org/joda/time/chrono/BuddhistChronology.getInstance(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/BuddhistChronology;
org.joda.time.chrono.TestBuddhistChronology.testWithZone:212 GETSTATIC org/joda/time/chrono/TestBuddhistChronology.TOKYO Lorg/joda/time/DateTimeZone;
org.joda.time.chrono.TestBuddhistChronology.testWithZone:212 INVOKESTATIC org/joda/time/chrono/BuddhistChronology.getInstance(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/BuddhistChronology;
org.joda.time.chrono.TestBuddhistChronology.testWithZone:212 ACONST_NULL
org.joda.time.chrono.TestBuddhistChronology.testWithZone:212 INVOKEVIRTUAL org/joda/time/chrono/BuddhistChronology.withZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;
org.joda.time.chrono.TestBuddhistChronology.testWithZone:212 INVOKESTATIC org/junit/Assert.assertSame(Ljava/lang/Object;Ljava/lang/Object;)V
org.joda.time.tz.CachedDateTimeZone.hashCode:123 ALOAD 0
org.joda.time.tz.CachedDateTimeZone.hashCode:123 GETFIELD org/joda/time/tz/CachedDateTimeZone.iZone Lorg/joda/time/DateTimeZone;
org.joda.time.tz.CachedDateTimeZone.hashCode:123 IRETURN

Slice consists of 433 bytecode instructions.
Computation took 5.41 seconds.
