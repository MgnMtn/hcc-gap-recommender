 0.0% done, time left: unknown                                0.1% done, time left: unknown  0.8% done, time left: unknown  1.2% done, time left: unknown  1.3% done, time left:   0:02:21    1.7% done, time left:   0:01:35  3.1% done, time left:   0:01:08  4.7% done, time left:   0:00:54  6.2% done, time left:   0:00:46  7.7% done, time left:   0:00:40  9.0% done, time left:   0:00:37 10.4% done, time left:   0:00:33 10.4% done, time left:   0:00:30 12.1% done, time left:   0:00:28 14.8% done, time left:   0:00:23 17.1% done, time left:   0:00:19 18.7% done, time left:   0:00:15 21.5% done, time left:   0:00:12 24.5% done, time left:   0:00:09 26.8% done, time left:   0:00:07 27.3% done, time left:   0:00:05 28.2% done, time left:   0:00:04 30.0% done, time left:   0:00:04 30.7% done, time left:   0:00:04 33.3% done, time left:   0:00:04 35.8% done, time left:   0:00:04 38.1% done, time left:   0:00:03 39.3% done, time left:   0:00:03 41.8% done, time left:   0:00:03 45.2% done, time left:   0:00:02 48.7% done, time left:   0:00:02 52.0% done, time left:   0:00:01 55.5% done, time left:   0:00:01 59.0% done, time left:   0:00:01 62.5% done, time left:   0:00:00 65.9% done, time left:   0:00:00 69.4% done, time left:   0:00:00 72.9% done, time left:   0:00:00 76.4% done, time left:   0:00:00 80.0% done, time left:   0:00:00 83.4% done, time left:   0:00:00 87.0% done, time left:   0:00:00 89.8% done, time left:   0:00:00 92.1% done, time left:   0:00:00 95.3% done, time left:   0:00:00 98.2% done, time left:   0:00:00 99.4% done, time left:   0:00:00 100.0% done, time left:   0:00:00  finished
The dynamic slice for criterion [org.joda.time.chrono.TestBuddhistChronology.testToString:221:*]:
org.joda.time.DateTimeZone.getDefault:163 GETSTATIC org/joda/time/DateTimeZone.cDefault Ljava/util/concurrent/atomic/AtomicReference;
org.joda.time.DateTimeZone.getDefault:163 INVOKEVIRTUAL java/util/concurrent/atomic/AtomicReference.get()Ljava/lang/Object;
org.joda.time.DateTimeZone.getDefault:163 ASTORE 0
org.joda.time.DateTimeZone.getDefault:187 ALOAD 0
org.joda.time.DateTimeZone.getDefault:187 ARETURN
org.joda.time.DateTimeZone.setDefault:207 GETSTATIC org/joda/time/DateTimeZone.cDefault Ljava/util/concurrent/atomic/AtomicReference;
org.joda.time.DateTimeZone.setDefault:207 ALOAD 0
org.joda.time.DateTimeZone.setDefault:207 INVOKEVIRTUAL java/util/concurrent/atomic/AtomicReference.set(Ljava/lang/Object;)V
org.joda.time.chrono.AssembledChronology.<init>:100 ALOAD 0
org.joda.time.chrono.AssembledChronology.<init>:100 ALOAD 1
org.joda.time.chrono.AssembledChronology.<init>:100 PUTFIELD org/joda/time/chrono/AssembledChronology.iBase Lorg/joda/time/Chronology;
org.joda.time.chrono.AssembledChronology.getZone:107 ALOAD 0
org.joda.time.chrono.AssembledChronology.getZone:107 GETFIELD org/joda/time/chrono/AssembledChronology.iBase Lorg/joda/time/Chronology;
org.joda.time.chrono.AssembledChronology.getZone:107 DUP
org.joda.time.chrono.AssembledChronology.getZone:107 ASTORE 1
org.joda.time.chrono.AssembledChronology.getZone:107 IFNULL L0 false true
org.joda.time.chrono.AssembledChronology.getZone:108 ALOAD 1
org.joda.time.chrono.AssembledChronology.getZone:108 ARETURN
org.joda.time.chrono.BuddhistChronology.getInstance:94 INVOKESTATIC org/joda/time/DateTimeZone.getDefault()Lorg/joda/time/DateTimeZone;
org.joda.time.chrono.BuddhistChronology.getInstance:94 INVOKESTATIC org/joda/time/chrono/BuddhistChronology.getInstance(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/BuddhistChronology;
org.joda.time.chrono.BuddhistChronology.getInstance:108 GETSTATIC org/joda/time/chrono/BuddhistChronology.cCache Ljava/util/concurrent/ConcurrentHashMap;
org.joda.time.chrono.BuddhistChronology.getInstance:108 ALOAD 0
org.joda.time.chrono.BuddhistChronology.getInstance:108 INVOKEVIRTUAL java/util/concurrent/ConcurrentHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;
org.joda.time.chrono.BuddhistChronology.getInstance:108 ASTORE 1
org.joda.time.chrono.BuddhistChronology.getInstance:109 ALOAD 1
org.joda.time.chrono.BuddhistChronology.getInstance:109 IFNONNULL L1 false true
org.joda.time.chrono.BuddhistChronology.getInstance:114 NEW org/joda/time/chrono/BuddhistChronology
org.joda.time.chrono.BuddhistChronology.getInstance:114 DUP
org.joda.time.chrono.BuddhistChronology.getInstance:114 INVOKESTATIC org/joda/time/chrono/LimitChronology.getInstance(Lorg/joda/time/Chronology;Lorg/joda/time/ReadableDateTime;Lorg/joda/time/ReadableDateTime;)Lorg/joda/time/chrono/LimitChronology;
org.joda.time.chrono.BuddhistChronology.getInstance:114 INVOKESPECIAL org/joda/time/chrono/BuddhistChronology.<init>(Lorg/joda/time/Chronology;Ljava/lang/Object;)V
org.joda.time.chrono.BuddhistChronology.getInstance:114 ASTORE 1
org.joda.time.chrono.BuddhistChronology.getInstance:115 GETSTATIC org/joda/time/chrono/BuddhistChronology.cCache Ljava/util/concurrent/ConcurrentHashMap;
org.joda.time.chrono.BuddhistChronology.getInstance:115 ALOAD 0
org.joda.time.chrono.BuddhistChronology.getInstance:115 ALOAD 1
org.joda.time.chrono.BuddhistChronology.getInstance:115 INVOKEVIRTUAL java/util/concurrent/ConcurrentHashMap.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
org.joda.time.chrono.BuddhistChronology.getInstance:120 ALOAD 1
org.joda.time.chrono.BuddhistChronology.getInstance:120 ARETURN
org.joda.time.chrono.BuddhistChronology.<init>:132 ALOAD 0
org.joda.time.chrono.BuddhistChronology.<init>:132 ALOAD 1
org.joda.time.chrono.BuddhistChronology.<init>:132 INVOKESPECIAL org/joda/time/chrono/AssembledChronology.<init>(Lorg/joda/time/Chronology;Ljava/lang/Object;)V
org.joda.time.chrono.BuddhistChronology.toString:208 ALOAD 0
org.joda.time.chrono.BuddhistChronology.toString:208 INVOKEVIRTUAL org/joda/time/chrono/BuddhistChronology.getZone()Lorg/joda/time/DateTimeZone;
org.joda.time.chrono.BuddhistChronology.toString:208 ASTORE 2
org.joda.time.chrono.BuddhistChronology.toString:209 ALOAD 2
org.joda.time.chrono.BuddhistChronology.toString:209 IFNULL L0 false true
org.joda.time.chrono.BuddhistChronology.toString:210 NEW java/lang/StringBuilder
org.joda.time.chrono.BuddhistChronology.toString:210 INVOKEVIRTUAL java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
org.joda.time.chrono.BuddhistChronology.toString:210 INVOKEVIRTUAL java/lang/StringBuilder.append(C)Ljava/lang/StringBuilder;
org.joda.time.chrono.BuddhistChronology.toString:210 INVOKEVIRTUAL java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
org.joda.time.chrono.BuddhistChronology.toString:210 INVOKEVIRTUAL java/lang/StringBuilder.append(C)Ljava/lang/StringBuilder;
org.joda.time.chrono.BuddhistChronology.toString:210 ASTORE 1
org.joda.time.chrono.BuddhistChronology.toString:212 ALOAD 1
org.joda.time.chrono.BuddhistChronology.toString:212 ARETURN
org.joda.time.chrono.LimitChronology.getInstance:79 NEW org/joda/time/chrono/LimitChronology
org.joda.time.chrono.LimitChronology.getInstance:79 ARETURN
org.joda.time.chrono.TestBuddhistChronology.main:78 INVOKEVIRTUAL org/joda/time/chrono/TestBuddhistChronology.setUp()V
org.joda.time.chrono.TestBuddhistChronology.main:79 INVOKEVIRTUAL org/joda/time/chrono/TestBuddhistChronology.testFactory()V
org.joda.time.chrono.TestBuddhistChronology.main:119 INVOKEVIRTUAL org/joda/time/chrono/TestBuddhistChronology.testToString()V
org.joda.time.chrono.TestBuddhistChronology.setUp:145 GETSTATIC org/joda/time/chrono/TestBuddhistChronology.LONDON Lorg/joda/time/DateTimeZone;
org.joda.time.chrono.TestBuddhistChronology.setUp:145 INVOKESTATIC org/joda/time/DateTimeZone.setDefault(Lorg/joda/time/DateTimeZone;)V
org.joda.time.chrono.TestBuddhistChronology.testFactory:173 INVOKESTATIC org/joda/time/chrono/BuddhistChronology.getInstance()Lorg/joda/time/chrono/BuddhistChronology;
org.joda.time.chrono.TestBuddhistChronology.testToString:221 LDC "BuddhistChronology[Europe/London]"
org.joda.time.chrono.TestBuddhistChronology.testToString:221 GETSTATIC org/joda/time/chrono/TestBuddhistChronology.LONDON Lorg/joda/time/DateTimeZone;
org.joda.time.chrono.TestBuddhistChronology.testToString:221 INVOKESTATIC org/joda/time/chrono/BuddhistChronology.getInstance(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/BuddhistChronology;
org.joda.time.chrono.TestBuddhistChronology.testToString:221 INVOKEVIRTUAL org/joda/time/chrono/BuddhistChronology.toString()Ljava/lang/String;
org.joda.time.chrono.TestBuddhistChronology.testToString:221 INVOKESTATIC org/junit/Assert.assertEquals(Ljava/lang/Object;Ljava/lang/Object;)V
org.joda.time.tz.CachedDateTimeZone.hashCode:123 ALOAD 0
org.joda.time.tz.CachedDateTimeZone.hashCode:123 GETFIELD org/joda/time/tz/CachedDateTimeZone.iZone Lorg/joda/time/DateTimeZone;
org.joda.time.tz.CachedDateTimeZone.hashCode:123 IRETURN

Slice consists of 358 bytecode instructions.
Computation took 5.56 seconds.
