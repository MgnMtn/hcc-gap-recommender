 0.0% done, time left: unknown                                0.1% done, time left: unknown  0.3% done, time left: unknown  2.3% done, time left: unknown  3.4% done, time left: unknown  3.6% done, time left: unknown  4.9% done, time left:   0:00:07    5.7% done, time left:   0:00:08  6.0% done, time left:   0:00:10  6.0% done, time left:   0:00:11  7.6% done, time left:   0:00:12 10.5% done, time left:   0:00:12 13.6% done, time left:   0:00:10 15.9% done, time left:   0:00:08 20.1% done, time left:   0:00:06 26.5% done, time left:   0:00:02 32.3% done, time left:   0:00:01 35.1% done, time left:   0:00:01 36.1% done, time left:   0:00:01 36.4% done, time left:   0:00:00 37.2% done, time left:   0:00:00 43.9% done, time left:   0:00:00 50.1% done, time left:   0:00:00 53.8% done, time left:   0:00:00 58.8% done, time left:   0:00:00 69.3% done, time left:   0:00:00 74.9% done, time left:   0:00:00 84.3% done, time left:   0:00:00 91.7% done, time left:   0:00:00 96.4% done, time left:   0:00:00 97.7% done, time left:   0:00:00 100.0% done, time left:   0:00:00  finished
The dynamic slice for criterion [org.joda.time.TestDateTimeUtils.testGetIntervalChronology_RInterval:392:*]:
org.joda.time.DateTimeUtils.getIntervalChronology:227 ALOAD 0
org.joda.time.DateTimeUtils.getIntervalChronology:227 IFNONNULL L0 true false
org.joda.time.DateTimeUtils.getIntervalChronology:230 ALOAD 0
org.joda.time.DateTimeUtils.getIntervalChronology:230 INVOKEINTERFACE org/joda/time/ReadableInterval.getChronology()Lorg/joda/time/Chronology;
org.joda.time.DateTimeUtils.getIntervalChronology:230 ASTORE 1
org.joda.time.DateTimeUtils.getIntervalChronology:231 ALOAD 1
org.joda.time.DateTimeUtils.getIntervalChronology:231 IFNONNULL L1 true false
org.joda.time.DateTimeUtils.getIntervalChronology:234 ALOAD 1
org.joda.time.DateTimeUtils.getIntervalChronology:234 ARETURN
org.joda.time.DateTimeUtils.getChronology:268 ALOAD 0
org.joda.time.DateTimeUtils.getChronology:268 IFNONNULL L0 true false
org.joda.time.DateTimeUtils.getChronology:271 ALOAD 0
org.joda.time.DateTimeUtils.getChronology:271 ARETURN
org.joda.time.DateTimeZone.getDefault:163 GETSTATIC org/joda/time/DateTimeZone.cDefault Ljava/util/concurrent/atomic/AtomicReference;
org.joda.time.DateTimeZone.getDefault:163 INVOKEVIRTUAL java/util/concurrent/atomic/AtomicReference.get()Ljava/lang/Object;
org.joda.time.DateTimeZone.getDefault:163 ASTORE 0
org.joda.time.DateTimeZone.getDefault:187 ALOAD 0
org.joda.time.DateTimeZone.getDefault:187 ARETURN
org.joda.time.DateTimeZone.getID:732 ALOAD 0
org.joda.time.DateTimeZone.getID:732 GETFIELD org/joda/time/DateTimeZone.iID Ljava/lang/String;
org.joda.time.DateTimeZone.getID:732 ARETURN
org.joda.time.Interval.<init>:186 ALOAD 0
org.joda.time.Interval.<init>:186 ALOAD 5
org.joda.time.Interval.<init>:186 INVOKESPECIAL org/joda/time/base/BaseInterval.<init>(JJLorg/joda/time/Chronology;)V
org.joda.time.TestDateTimeUtils.main:135 INVOKEVIRTUAL org/joda/time/TestDateTimeUtils.testGetInstantChronology_RI()V
org.joda.time.TestDateTimeUtils.main:136 INVOKEVIRTUAL org/joda/time/TestDateTimeUtils.testGetIntervalChronology_RInterval()V
org.joda.time.TestDateTimeUtils.testGetInstantChronology_RI:370 INVOKESTATIC org/joda/time/chrono/BuddhistChronology.getInstance()Lorg/joda/time/chrono/BuddhistChronology;
org.joda.time.TestDateTimeUtils.testGetIntervalChronology_RInterval:391 NEW org/joda/time/Interval
org.joda.time.TestDateTimeUtils.testGetIntervalChronology_RInterval:391 DUP
org.joda.time.TestDateTimeUtils.testGetIntervalChronology_RInterval:391 INVOKESTATIC org/joda/time/chrono/BuddhistChronology.getInstance()Lorg/joda/time/chrono/BuddhistChronology;
org.joda.time.TestDateTimeUtils.testGetIntervalChronology_RInterval:391 INVOKESPECIAL org/joda/time/Interval.<init>(JJLorg/joda/time/Chronology;)V
org.joda.time.TestDateTimeUtils.testGetIntervalChronology_RInterval:391 ASTORE 1
org.joda.time.TestDateTimeUtils.testGetIntervalChronology_RInterval:392 INVOKESTATIC org/joda/time/chrono/BuddhistChronology.getInstance()Lorg/joda/time/chrono/BuddhistChronology;
org.joda.time.TestDateTimeUtils.testGetIntervalChronology_RInterval:392 ALOAD 1
org.joda.time.TestDateTimeUtils.testGetIntervalChronology_RInterval:392 INVOKESTATIC org/joda/time/DateTimeUtils.getIntervalChronology(Lorg/joda/time/ReadableInterval;)Lorg/joda/time/Chronology;
org.joda.time.TestDateTimeUtils.testGetIntervalChronology_RInterval:392 INVOKESTATIC org/junit/Assert.assertEquals(Ljava/lang/Object;Ljava/lang/Object;)V
org.joda.time.base.BaseInterval.<init>:72 ALOAD 0
org.joda.time.base.BaseInterval.<init>:72 ALOAD 5
org.joda.time.base.BaseInterval.<init>:72 INVOKESTATIC org/joda/time/DateTimeUtils.getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;
org.joda.time.base.BaseInterval.<init>:72 PUTFIELD org/joda/time/base/BaseInterval.iChronology Lorg/joda/time/Chronology;
org.joda.time.base.BaseInterval.getChronology:215 ALOAD 0
org.joda.time.base.BaseInterval.getChronology:215 GETFIELD org/joda/time/base/BaseInterval.iChronology Lorg/joda/time/Chronology;
org.joda.time.base.BaseInterval.getChronology:215 ARETURN
org.joda.time.chrono.BuddhistChronology.getInstance:94 INVOKESTATIC org/joda/time/DateTimeZone.getDefault()Lorg/joda/time/DateTimeZone;
org.joda.time.chrono.BuddhistChronology.getInstance:94 INVOKESTATIC org/joda/time/chrono/BuddhistChronology.getInstance(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/BuddhistChronology;
org.joda.time.chrono.BuddhistChronology.getInstance:94 ARETURN
org.joda.time.chrono.BuddhistChronology.getInstance:108 GETSTATIC org/joda/time/chrono/BuddhistChronology.cCache Ljava/util/concurrent/ConcurrentHashMap;
org.joda.time.chrono.BuddhistChronology.getInstance:108 ALOAD 0
org.joda.time.chrono.BuddhistChronology.getInstance:108 INVOKEVIRTUAL java/util/concurrent/ConcurrentHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;
org.joda.time.chrono.BuddhistChronology.getInstance:108 ASTORE 1
org.joda.time.chrono.BuddhistChronology.getInstance:109 ALOAD 1
org.joda.time.chrono.BuddhistChronology.getInstance:109 IFNONNULL L1 false true
org.joda.time.chrono.BuddhistChronology.getInstance:114 NEW org/joda/time/chrono/BuddhistChronology
org.joda.time.chrono.BuddhistChronology.getInstance:114 ASTORE 1
org.joda.time.chrono.BuddhistChronology.getInstance:115 GETSTATIC org/joda/time/chrono/BuddhistChronology.cCache Ljava/util/concurrent/ConcurrentHashMap;
org.joda.time.chrono.BuddhistChronology.getInstance:115 ALOAD 0
org.joda.time.chrono.BuddhistChronology.getInstance:115 ALOAD 1
org.joda.time.chrono.BuddhistChronology.getInstance:115 INVOKEVIRTUAL java/util/concurrent/ConcurrentHashMap.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
org.joda.time.chrono.BuddhistChronology.getInstance:120 ALOAD 1
org.joda.time.chrono.BuddhistChronology.getInstance:120 ARETURN
org.joda.time.tz.FixedDateTimeZone.hashCode:102 ALOAD 0
org.joda.time.tz.FixedDateTimeZone.hashCode:102 INVOKEVIRTUAL org/joda/time/tz/FixedDateTimeZone.getID()Ljava/lang/String;
org.joda.time.tz.FixedDateTimeZone.hashCode:102 INVOKEVIRTUAL java/lang/String.hashCode()I
org.joda.time.tz.FixedDateTimeZone.hashCode:102 BIPUSH 37
org.joda.time.tz.FixedDateTimeZone.hashCode:102 ALOAD 0
org.joda.time.tz.FixedDateTimeZone.hashCode:102 GETFIELD org/joda/time/tz/FixedDateTimeZone.iStandardOffset I
org.joda.time.tz.FixedDateTimeZone.hashCode:102 IMUL
org.joda.time.tz.FixedDateTimeZone.hashCode:102 IADD
org.joda.time.tz.FixedDateTimeZone.hashCode:102 BIPUSH 31
org.joda.time.tz.FixedDateTimeZone.hashCode:102 ALOAD 0
org.joda.time.tz.FixedDateTimeZone.hashCode:102 GETFIELD org/joda/time/tz/FixedDateTimeZone.iWallOffset I
org.joda.time.tz.FixedDateTimeZone.hashCode:102 IMUL
org.joda.time.tz.FixedDateTimeZone.hashCode:102 IADD
org.joda.time.tz.FixedDateTimeZone.hashCode:102 IRETURN

Slice consists of 363 bytecode instructions.
Computation took 3.73 seconds.
